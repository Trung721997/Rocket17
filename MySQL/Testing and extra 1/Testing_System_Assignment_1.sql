DROP DATABASE IF EXISTS 	Testing_System_Assignment_1 ;
CREATE DATABASE 			Testing_System_Assignment_1 ;
USE							Testing_System_Assignment_1 ;

-- Tạo bẳng Department
DROP DATABASE IF EXISTS	Department;
CREATE TABLE	Department(
DepartmentID	TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
DepartmentName	VARCHAR(20) UNIQUE NOT NULL
);

-- Tạo bảng Position
DROP DATABASE IF EXISTS 	`Position`;
CREATE TABLE 	`Position`(
PositionID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
PositionName	ENUM('Dev', 'Test', 'Scrum Master', 'PM') UNIQUE NOT NULL
);

-- Tạo bảng Account
DROP DATABASE IF EXISTS `Account`;
CREATE TABLE 	`Account`(
AccountID		INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Email			VARCHAR(50) UNIQUE NOT NULL,
Username		VARCHAR(20) UNIQUE NOT NULL CHECK( length(Username) > 6),
FullName		VARCHAR(20) NOT NULL,
DepartmentID	TINYINT UNSIGNED NOT NULL,
PositionID		TINYINT UNSIGNED NOT NULL,
CreateDate		DATE NOT NULL,
FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
FOREIGN KEY (PositionID) REFERENCES `Position`(PositionID) 
);

-- Tạo bảng Group
DROP DATABASE IF EXISTS `Group`;
CREATE TABLE 	`Group`(
GroupID			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
GroupName		VARCHAR(20) UNIQUE NOT NULL,
CreatorID		TINYINT UNSIGNED NOT NULL,
CreateDate		DATE NOT NULL
);

-- Tạo bảng GroupAccount
DROP DATABASE IF EXISTS GroupAccount;
CREATE TABLE	GroupAccount(
GroupID			TINYINT UNSIGNED NOT NULL,
AccountID		INT UNSIGNED NOT NULL,
JoinDate		DATE NOT NULL,
FOREIGN KEY	(GroupID) REFERENCES `Group`(GroupID),
FOREIGN KEY	(AccountID) REFERENCES `Account`(AccountID)
);

-- Tạo bảng TypeQuestion
DROP DATABASE IF EXISTS TypeQuestion;
CREATE TABLE	TypeQuestion (
TypeID			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
TypeName		ENUM('Essay', 'Multiple Choice' ) UNIQUE NOT NULL
);

-- Tạo bảng CategoryQuestion
DROP DATABASE IF EXISTS CategoryQuestion;
CREATE TABLE	CategoryQuestion(
CategoryID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
CategoryName	ENUM('Java', '.NET', 'SQL', 'Postman', 'Ruby') UNIQUE NOT NULL
);

-- Tạo bảng Question
DROP DATABASE IF EXISTS Question;
CREATE TABLE	Question(
QuestionID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Content			VARCHAR(100) UNIQUE NOT NULL,
CategoryID		TINYINT UNSIGNED NOT NULL,
TypeID			TINYINT UNSIGNED NOT NULL,
CreatorID		INT UNSIGNED NOT NULL,
CreateDate		DATE NOT NULL,
FOREIGN KEY (CategoryID) REFERENCES CategoryQuestion(CategoryID),
FOREIGN KEY (TypeID) REFERENCES TypeQuestion(TypeID),
FOREIGN KEY (CreatorID) REFERENCES	`Account` (AccountID)
);

-- Tạo bảng Answer
DROP DATABASE IF EXISTS Answer;
CREATE TABLE 	Answer(
AnswerID		TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
Content			VARCHAR(100) UNIQUE NOT NULL,
QuestionID		TINYINT UNSIGNED NOT NULL,
isCorrect		ENUM ('Đúng', 'Sai') NOT NULL,
FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID)
);

-- Tạo bảng Exam
DROP DATABASE IF EXISTS Exam;
CREATE TABLE	Exam(
ExamID			TINYINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
`Code`			TINYINT UNSIGNED UNIQUE NOT NULL,
Title			VARCHAR(50) UNIQUE NOT NULL,
CategoryID		TINYINT UNSIGNED UNIQUE NOT NULL,
Duration		TINYINT UNSIGNED NOT NULL,
CreatorID		TINYINT UNSIGNED NOT NULL,
CreateDate		DATE NOT NULL
);

-- Tạo bảng ExamQuestion
DROP DATABASE IF EXISTS ExamQuestion;
CREATE TABLE	ExamQuestion(
ExamID			TINYINT UNSIGNED NOT NULL,
QuestionID		TINYINT UNSIGNED NOT NULL,
FOREIGN KEY (ExamID) REFERENCES Exam(ExamID),
FOREIGN KEY (QuestionID) REFERENCES Question(QuestionID)
);